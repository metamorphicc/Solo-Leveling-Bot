require('dotenv').config();
const {Bot, Keyboard, InlineKeyboard} = require('grammy');
const { hydrate } = require('@grammyjs/hydrate');

const bot = new Bot(process.env.TOKEN);
bot.use(hydrate())
// const keyboardStart = new Keyboard().text('–ö–Ω–æ–ø–∫–∞ 1').text('–ö–Ω–æ–ø–∫–∞ 2').text('–ö–Ω–æ–ø–∫–∞ 3').resized()

const keyboardList = ["–ö–Ω–æ–ø–∫–∞ 1", "–ö–Ω–æ–ø–∫–∞ 2", "–ö–Ω–æ–ø–∫–∞ 3"]
const row = keyboardList.map((char) => {
    return [
        Keyboard.text(char)
    ] 
}) 
const keyboardStart = Keyboard.from(row).resized().placeholder('–ö–∞–∫—É—é –∫–Ω–æ–ø–∫—É?').oneTime()

TEXT=`–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è:


–í—ã–ø–æ–ª–Ω–µ–Ω–æ: ${0}`

bot.api.setMyCommands([
    {
      command: 'pythonshit',
      description: '–ü—Ä–∞–≤–¥–∞ –≤—Å–µ—è —Ä—É—Å–∏',
    }, 
    {
      command: 'start',
      description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'
    },
    {
        command: 'dailytasks',
        description: '–ü–æ–∫–∞–∑–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è'
    },
    {
        command: 'inlinebuttons',
        description: '–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞'
    }
]);

bot.command('help', async (ctx) => {
    await ctx.react('‚ù§‚Äçüî•')
    await ctx.reply(`<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/pythonshit ‚Äî <i>—É—Å—Ç—Ä–∞—à–∞—é—â–∞—è –ø—Ä–∞–≤–¥–∞...</i>
/dailytasks ‚Äî –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
/tg ‚Äî –¢–ì–ö —Å–æ–∑–¥–∞—Ç–µ–ª—è -> <a href='https://t.me/lowbankerr'>—Ç—ã–∫</a>`, {
    parse_mode: "HTML",
    disable_web_page_preview: true
})
})

bot.command('inlinebuttons', async (ctx) => {
    const inlineKeyboard = new InlineKeyboard()
    .text('–ö–Ω–æ–ø–∫–∞ 1', 'button-1')
    .text('–ö–Ω–æ–ø–∫–∞ 2', 'button-2')
    .text('–ö–Ω–æ–ø–∫–∞ 3', 'button-3')
    await ctx.reply('–û–∫–µ–π. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –∑–¥–µ—Å—å',
        {
            reply_markup: inlineKeyboard
        }
    )

})

bot.callbackQuery('button-1', async (ctx) => {
    await ctx.answerCallbackQuery()
    await ctx.reply('–ö–Ω–æ–ø–∫–∞ 1')
})

bot.callbackQuery('button-2', async (ctx) => {
    await ctx.answerCallbackQuery()
    await ctx.reply('–°–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞.')
})

bot.hears('–ö–Ω–æ–ø–∫–∞ 1', async (ctx) => {
    await ctx.reply('–ö–Ω–æ–ø–∫–∞ 1.')
})

bot.command('dailytasks', async (ctx) => {
    await ctx.reply(TEXT)
})

bot.hears([/–∑–∞–¥–∞–Ω–∏—è/, /–ó–∞–¥–∞–Ω–∏—è/], async (ctx) => {
    await ctx.reply(TEXT)
})

bot.command('pythonshit', async (ctx) => {
    await ctx.reply('')
})

bot.command('start', async (ctx) => {

    await ctx.reply('–ü—Ä–∏–≤–µ—Ç! –¢—ã –Ω–∞–∂–∞–ª –∫–æ–º–∞–Ω–¥—É /start.', {
        reply_markup: keyboardStart
    });
})


bot.start();

